#include <iostream>





int main() {
	setlocale(LC_ALL, "ru");

	int n = 7, m = 15;
	// Нейтральные указатели
	/*
	//int* pn1 = &n; // Способ первый (неактуальный, т.к. из языка С и обладает одной проблемой(не однозначный синтаксис))


	//int* pn2 = NULL; // Способ второй(решает часть проблем, но все равно уже не актуален)

	int* pn3 = nullptr; // Способ третий (актцальный)
	if (pn3 != nullptr)
		std::cout << "pn3 = " << pn3 << std::endl;
	else
		std::cout << "Ошибка! Указатель не инициализирован!\n";

	*/

	//Модификации указателей
	//Типы констант указателей
	n = 7;

	//Указатель на константу. Может быть объявлен без инициализации и может быть перенаправлен на другую обласьт памяти, 
	// но с его помощью нельзя менять значение памяти, на которую он направлен
	const int* pointer1;
	pointer1 = &n;
	pointer1 = &m;
	//*pointer1 = 10; // Ошибка!
	std::cout << *pointer1 << std::endl;


	//Константный указатель или указатель-константа.  Не может быть объявлен без инициализации и не может быть перенаправлен на другую область памяти,
	//но с его помощью можно менять значение памяти, на которую он направлен.
	int* const pointer2 = &n;
	//pointer2 = &m;  //ОШИБКА!
	*pointer2 = 10;
	std::cout << *pointer2 << std::endl;

	//Константный указатель на константу. не может быть объявлен буз инициализации и не может быть перенаправлен на другую область памяти. Сего помощью нельзя менять значение 
	//памяти, на которую он направлен.
	const int* const pointer3 = &n;
	//pointer3 = &m; //ОШИБКА
	//*pointer3 = 42; // ОШИБКА
	std::cout << *pointer3 << std::endl;


	return 0;
}